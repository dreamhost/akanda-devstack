# -*- mode: shell-script -*-

# This functions is used by both devstack and the neutron-icehouse-os-package job to patch vanilla
# neutron and make it work with akanda.

function patch_neutron() {
    # The RUG doesn't work with vanilla icehouse neutron, to make it works we need to backport a patch that
    # has been proposed for juno but not merged yet.
    LAST_COMMIT_HASH="$(git diff HEAD^ | md5sum | awk '{ print $1 }')"
    PATCH_HASH="$(cat $PATCHES_FOLDER/add_support_for_the_akanda_project.patch | md5sum | awk '{ print $1 }')"
    # Apply the patch just first time we stack
    if [ "$LAST_COMMIT_HASH" != "$PATCH_HASH" ]; then
        # Neutron need to be patched to work with the Akanda project.
        git apply $PATCHES_FOLDER/add_support_for_the_akanda_project.patch
        git add .
        git commit -m "Dreamhost: Add support for the Akanda project"

        # In icehouse, when a server is booted, nova asks neutron to create ports for the server and put the server in
        # the 'pause' state. Neutron then notifies nova back when the ports have been created but just for ports
        # where the device_owner attribute starts with the 'compute:' prefix. In our case, when a server is an akanda
        # the device_owner attribute of some of the ports starts with the 'network:' prefix and cause the router boot
        # to fail raising a timeout error.
        # We need to modify the neutron's method that does the filtering and allow notification for the ports with the
        # 'network:' prefix.
        git apply $PATCHES_FOLDER/fix_neutron_to_nova_notification.patch
        git add .
        git commit -m "DreamHost: Fix neutron-to-nova notification about ports creation"
    fi
}
